{"remainingRequest":"/Users/jeongmin/Workspace/uilab-github.github.io/node_modules/babel-loader/lib/index.js!/Users/jeongmin/Workspace/uilab-github.github.io/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/jeongmin/Workspace/uilab-github.github.io/src/helpers/loader.js","dependencies":[{"path":"/Users/jeongmin/Workspace/uilab-github.github.io/src/helpers/loader.js","mtime":1577083787515},{"path":"/Users/jeongmin/Workspace/uilab-github.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1577082863062},{"path":"/Users/jeongmin/Workspace/uilab-github.github.io/node_modules/babel-loader/lib/index.js","mtime":1577082862945},{"path":"/Users/jeongmin/Workspace/uilab-github.github.io/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1577082862683}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _asyncToGenerator from \"/Users/jeongmin/Workspace/uilab-github.github.io/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar DOC_ID = '1v2JBn1EHa20kcwz5rtszoNmjx9Znqzk-dGMhKw1m3vE';\nvar API_KEY = 'AIzaSyBoX_m8IQZO2Fq__4XgkIRADhVXTJwtsbs';\nimport sheets from '@/helpers/sheets';\nsheets.setKey(API_KEY);\nexport function loadData() {\n  return _loadData.apply(this, arguments);\n}\n\nfunction _loadData() {\n  _loadData = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var ranges, response, valueRanges, announcements, members, research, tags, links;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ranges = ['Announcements!A2:C', 'Members!A2:H', 'Research!A2:F', 'Tags!A2:F', 'Links!A2:G'];\n            _context.next = 3;\n            return sheets.getRanges(DOC_ID, ranges);\n\n          case 3:\n            response = _context.sent;\n            valueRanges = response.valueRanges;\n            announcements = getAnnouncementsFromValues(valueRanges[0].values);\n            members = getMembersFromValues(valueRanges[1].values);\n            research = getResearchFromValues(valueRanges[2].values);\n            tags = getTagsFromValues(valueRanges[3].values);\n            links = getLinksFromValues(valueRanges[4].values);\n            return _context.abrupt(\"return\", {\n              announcements: announcements,\n              members: members,\n              research: research,\n              tags: tags,\n              links: links\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadData.apply(this, arguments);\n}\n\nfunction getAnnouncementsFromValues(values) {\n  var announcements = [];\n  var now = new Date();\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var row = _step.value;\n      var expireAt = row[2] ? new Date(Date.parse(row[2])) : null;\n      console.log(row, expireAt, now);\n\n      if (!row[1]) {\n        continue;\n      } else if (expireAt && expireAt < now) {\n        continue;\n      }\n\n      announcements.push({\n        title: row[0],\n        content: row[1]\n      });\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return announcements;\n}\n\nfunction getMembersFromValues(values) {\n  var groups = [];\n  var group = null;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = values[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var row = _step2.value;\n      var title = row[0];\n\n      if (!group || group.title !== title) {\n        if (group) {\n          groups.push(group);\n        }\n\n        group = {\n          title: title,\n          members: []\n        };\n      }\n\n      group.members.push({\n        name: row[1],\n        email: row[2],\n        image: row[3],\n        description: row[4],\n        links: row[5],\n        degree: row[6],\n        year: row[7]\n      });\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  if (group) {\n    groups.push(group);\n  }\n\n  return groups;\n}\n\nfunction getResearchFromValues(values) {\n  var categories = [];\n  var category = null;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = values[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var row = _step3.value;\n      var title = row[0];\n\n      if (!category || category.title !== title) {\n        if (category) {\n          categories.push(category);\n        }\n\n        category = {\n          title: title,\n          items: []\n        };\n      }\n\n      category.items.push({\n        title: row[1],\n        authors: row[2],\n        booktitle: row[3],\n        links: row[4],\n        tags: (row[5] || '').split(',').map(function (tag) {\n          return tag.trim();\n        })\n      });\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  if (category) {\n    categories.push(category);\n  }\n\n  return categories;\n}\n\nfunction getTagsFromValues(values) {\n  var tags = {};\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = values[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var row = _step4.value;\n      var tagId = row[0];\n      tags[tagId] = {\n        title: row[1],\n        tag: row[2],\n        color: row[3]\n      };\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return tags;\n}\n\nfunction getLinksFromValues(values) {\n  var groups = [];\n  var group = null;\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = values[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var row = _step5.value;\n      var category = row[0];\n\n      if (!group || group.category !== category) {\n        if (group) {\n          groups.push(group);\n        }\n\n        group = {\n          category: category,\n          links: []\n        };\n      }\n\n      group.links.push({\n        title: row[1],\n        fullTitle: row[2],\n        url: row[3],\n        query: row[4],\n        callMonth: row[5],\n        eventMonth: row[6]\n      });\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  if (group) {\n    groups.push(group);\n  }\n\n  return groups;\n}",{"version":3,"sources":["/Users/jeongmin/Workspace/uilab-github.github.io/src/helpers/loader.js"],"names":["DOC_ID","API_KEY","sheets","setKey","loadData","ranges","getRanges","response","valueRanges","announcements","getAnnouncementsFromValues","values","members","getMembersFromValues","research","getResearchFromValues","tags","getTagsFromValues","links","getLinksFromValues","now","Date","row","expireAt","parse","console","log","push","title","content","groups","group","name","email","image","description","degree","year","categories","category","items","authors","booktitle","split","map","tag","trim","tagId","color","fullTitle","url","query","callMonth","eventMonth"],"mappings":"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","sourcesContent":["const DOC_ID = '1v2JBn1EHa20kcwz5rtszoNmjx9Znqzk-dGMhKw1m3vE'\nconst API_KEY = 'AIzaSyBoX_m8IQZO2Fq__4XgkIRADhVXTJwtsbs'\n\nimport sheets from '@/helpers/sheets'\nsheets.setKey(API_KEY)\n\nexport async function loadData() {\n  const ranges = [\n    'Announcements!A2:C',\n    'Members!A2:H',\n    'Research!A2:F',\n    'Tags!A2:F',\n    'Links!A2:G'\n  ]\n  const response = await sheets.getRanges(DOC_ID, ranges)\n  const valueRanges = response.valueRanges\n  const announcements = getAnnouncementsFromValues(valueRanges[0].values)\n  const members = getMembersFromValues(valueRanges[1].values)\n  const research = getResearchFromValues(valueRanges[2].values)\n  const tags = getTagsFromValues(valueRanges[3].values)\n  const links = getLinksFromValues(valueRanges[4].values)\n  return { announcements, members, research, tags, links }\n}\n\nfunction getAnnouncementsFromValues(values) {\n  const announcements = []\n  const now = new Date()\n  for (let row of values) {\n    const expireAt = row[2] ? new Date(Date.parse(row[2])) : null\n    console.log(row, expireAt, now)\n    if (!row[1]) {\n      continue\n    } else if (expireAt && (expireAt < now)) {\n      continue\n    }\n    announcements.push({\n      title: row[0],\n      content: row[1]\n    })\n  }\n  return announcements\n}\n\nfunction getMembersFromValues(values) {\n  const groups = []\n  let group = null\n  for (let row of values) {\n    const title = row[0]\n    if (!group || (group.title !== title)) {\n      if (group) {\n        groups.push(group)\n      }\n      group = { title, members: [] }\n    }\n    group.members.push({\n      name: row[1],\n      email: row[2],\n      image: row[3],\n      description: row[4],\n      links: row[5],\n      degree: row[6],\n      year: row[7]\n    })\n  }\n  if (group) {\n    groups.push(group)\n  }\n  return groups\n}\n\n function getResearchFromValues(values) {\n  const categories = []\n  let category = null\n  for (let row of values) {\n    const title = row[0]\n    if (!category || (category.title !== title)) {\n      if (category) {\n        categories.push(category)\n      }\n      category = { title, items: [] }\n    }\n    category.items.push({\n      title: row[1],\n      authors: row[2],\n      booktitle: row[3],\n      links: row[4],\n      tags: (row[5] || '').split(',').map(tag => tag.trim())\n    })\n  }\n  if (category) {\n    categories.push(category)\n  }\n  return categories\n}\n\nfunction getTagsFromValues(values) {\n  const tags = {}\n  for (let row of values) {\n    const tagId = row[0]\n    tags[tagId] = {\n      title: row[1],\n      tag: row[2],\n      color: row[3]\n    }\n  }\n  return tags\n}\n\nfunction getLinksFromValues(values) {\n  const groups = []\n  let group = null\n  for (let row of values) {\n    const category = row[0]\n    if (!group || (group.category !== category)) {\n      if (group) {\n        groups.push(group)\n      }\n      group = { category, links: [] }\n    }\n    group.links.push({\n      title: row[1],\n      fullTitle: row[2],\n      url: row[3],\n      query: row[4],\n      callMonth: row[5],\n      eventMonth: row[6]\n    })\n  }\n  if (group) {\n    groups.push(group)\n  }\n  return groups\n}"]}]}